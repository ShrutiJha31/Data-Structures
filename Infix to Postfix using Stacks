
#include<bits/stdc++.h>
using namespace std;
struct Node
{
   char data;
   struct Node *next;
}*top=NULL;

void push(char x)
{
    struct Node *t;
    t=(struct Node*)malloc(sizeof(struct Node));
    

     t->data=x;
     t->next=top;
     top=t;
         
  }  
  
  int pop()
  {
       int x=-1;
       struct Node *t;
       if (top==NULL)
          printf("Stack is Empty");
       else
         {
         t=top;
         x=t->data;
         top=t->next;
         free(t);
         }
       return x;
  }   
  
  int isOperand(char ch)
  {
      if(ch=='*'||ch=='/'||ch=='+'||ch=='-')
      return 0;
      else
      return 1;
  }
  
  int pre(char ch)
  {
      if(ch=='*'||ch=='/')
      return 2;
      else
      return 1;
  }
  void Display()
  {
      struct Node *p;
      p=top;
      while(p!=NULL)
      {
     cout<<p->data;
      p=p->next;
      }
      
   }   
        
int main()
{
    cout<<"Enter Expression";
string str;
cin>>str;
struct Node *t;int k=0;int i=0;int j=0;
char str1[1000];
while(str[i]!='\0')
{
   if(isOperand(str[i]))
   {
      str1[j++]=str[i++];
 }  else
   {
       if(top==NULL)
       push(str[i++]);
       else
       
       {
          
           if(pre(str[i])<=pre(top->data))
           str1[j++]=pop();
           else
           {
               push(str[i++]);
           }
       }
   }
}
while(top!=NULL)
   {
       str1[j++]=pop();
   }

  
cout<<str1;
}
