class Solution {
public:
    vector<vector<int>>res;
    map<int,vector<int>>adj;
    unordered_map<int,int>vis;
    void  dfs(int src,int n,vector<int>v)
    {
       
        if(src==n-1)
        {
             v.push_back(src);
            res.push_back(v);
            return ;
        }
         vis[src]=1;
         v.push_back(src);
        for(auto itr:adj[src])
        {
            if(vis[itr]!=1)
            {
                dfs(itr,n,v);
            }
        }
        v.pop_back();
        vis[src]=0;
    }
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        for(int i=0;i<graph.size();i++)
        {
            for(auto itr:graph[i])
                adj[i].push_back(itr);
        }
        vector<int>v;
        dfs(0,graph.size(),v);
        return res;
    }
};
