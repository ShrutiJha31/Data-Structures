#include<bits/stdc++.h>
using namespace std;

int minTimeToRot(vector<vector<int>>& grid, int m, int n)
{
  int vis[m+1][n+1];
        memset(vis,0,sizeof(vis));
        int cnt=0;
          queue<pair<int,int>>q,q1;
        for(int i=0;i<m;i++)
        {
           for(int j=0;j<n;j++)
           {
               if(grid[i][j]==2&&vis[i][j]==0)
               {
                  
                 
                   q.push({i,j});
                   }
           }
        }
         int cnt1=0;
                   while(!q.empty())
                   {
                       int x=q.front().first;
                       int y=q.front().second;
                       q.pop();
                       grid[x][y]=2;
                     
                       if(x+1<m&&vis[x+1][y]==0&&grid[x+1][y]==1)
                       {
                           q1.push({x+1,y});
                             vis[x+1][y]=1;
                       }
                        if(y+1<n&&vis[x][y+1]==0&&grid[x][y+1]==1)
                           q1.push({x,y+1}),  vis[x][y+1]=1;
                         if(x>0&&vis[x-1][y]==0&&grid[x-1][y]==1)
                           q1.push({x-1,y}),  vis[x-1][y]=1;
                         if(y>0&&vis[x][y-1]==0&&grid[x][y-1]==1)
                           q1.push({x,y-1}),  vis[x][y-1]=1;
                       if(q.empty()&&!q1.empty())
                       {
                           cnt1++;
                       }
                       //cout<<x<<" "<<y<<q.size()<<endl;
                       if(q.empty())
                       while(!q1.empty())
                       {
                           q.push(q1.front());
                           q1.pop();
                       }
                   }
                
               for(int i=0;i<m;i++)
               {
                   for(int j=0;j<n;j++)
                   {
                       if(grid[i][j]==1)
                           return -1;
                   }
               }
            return cnt1;
    
}
